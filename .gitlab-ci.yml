image: node:20.11.1-bullseye-slim
stages:
  - unit-test
  - filesystem-scan
  - build
  - test


variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CLUSTER_NAME: mycluster

services:
  - docker:24.0.6-dind

unit-test-dependencies:
  stage: unit-test
  script:
    - echo "Installing dependencies for unit-tests"
    - npm install supertest mocha --save-dev
    - npm install jsdom --save-dev
    - npm install -y

#Performing Continous Integration
#Unit-Tests
unit_testing:
  needs: [unit-test-dependencies] 
  stage: unit-test
  script:
    - echo "Running unit tests on the application..."
    - npm test

fs-scanning:
  stage: filesystem-scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs .    

include:
  - template: Jobs/Build.gitlab-ci.yml
  - template: Jobs/Container-Scanning.gitlab-ci.yml

container_scanning:
  variables:
    CS_DEFAULT_BRANCH_IMAGE: $CI_REGISTRY_IMAGE/$CI_DEFAULT_BRANCH:$CI_COMMIT_SHA


sonarqube-check:
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - main
