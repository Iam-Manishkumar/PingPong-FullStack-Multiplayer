image: node:latest
stages:
  - build
  - deliver

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CLUSTER_NAME: mycluster 

services:
  - docker:24.0.5

# Publish to GitLab Package Registry
# Dockerize
docker_build:
  image: docker
  services:
    - docker:24.0.5
  stage: build
  script:
    - echo "Building Docker image..."
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        echo "Tagging Docker image with Git tag..."
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      fi

# CD Stage
deploy_to_staging:
  image: 
    name: alpine/helm:3.12.3
    entrypoint: [""]
  stage: deliver
  before_script:
    - apk add --no-cache curl python3 py3-pip
    - pip3 install awscli
    - echo -n "$CI_JOB_TOKEN" | helm registry login -u gitlab-ci-token --password-stdin $CI_REGISTRY

  script:
    - helm repo add gitlab-registry https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/packages/helm/stable
    - aws eks update-kubeconfig --region us-east-1 --name $CLUSTER_NAME
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        helm upgrade --install --set image.tag=$CI_COMMIT_TAG mynodejsapp gitlab-registry/nodejsapp-chart --namespace staging  
      else
        helm upgrade --install --set image.tag=$CI_COMMIT_SHORT_SHA mynodejsapp gitlab-registry/nodejsapp-chart --namespace staging  
      fi
