image: node:latest

stages:
  - dependencies
  - unit-test
  - build-the-image

variables:
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  CLUSTER_NAME: mycluster

services:
  - docker:24.0.6-dind

#Installation of dependencies
Install-Dependency:
  stage: dependencies
  script:
    - npm install supertest mocha --save-dev
    - npm install jsdom --save-dev

#Performing Continous Integration
#Unit-Tests
unit_testing:
  stage: unit-test
  script:
    - echo "Running unit tests on the application..."
    - npm install --save-dev supertest mocha
    - npm install -y
    - npm test

#Building the image
# Publish to GitLab Package Registry
# Dockerize
docker_build:
  image: docker
  services:
    - docker:24.0.6-dind
  stage: build-the-image
  script:
    - echo "Building Docker image..."
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CONTAINER_IMAGE .
    - docker push $CONTAINER_IMAGE
    - |
      if [ -n "$CI_COMMIT_TAG" ]; then
        echo "Tagging Docker image with Git tag..."
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
        docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      fi   
